version: '3'

networks:
  default: ~
  internal:
    internal: true
  database:
    internal: true

services:
  tmp:
    build:
      context: .
    networks:
      - default
      - internal
    links:
      - backend:toto

  db-postgres:
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    image: postgres:16.3-alpine3.19
    restart: unless-stopped
    env_file:
      - .env
    container_name: db-postgres
    networks:
      - database
    volumes:
      - data-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRESQL_ADDON_DB}
      POSTGRES_PASSWORD: ${POSTGRESQL_ADDON_PASSWORD}
      POSTGRES_USER: ${POSTGRESQL_ADDON_USER}

  backend:
    depends_on:
      db-postgres:
        condition: service_healthy
    env_file:
      - .env
    build:
      context: .
    restart: unless-stopped
    networks:
      internal:
        aliases:
          - oui-backend
      database: ~

  nginx:
    depends_on:
      backend:
        condition: service_started
    image: nginx:mainline
    restart: always
    networks:
      - default
      - internal
    ports:
      - 8888:80
      - 4343:443
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro

volumes:
  data-postgres: {}